name: Darshan Transport Frontend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '22.18.0'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps --ignore-scripts

    - name: Lint code (fail on warnings)
      run: npx eslint --config eslint.config.js "src/**/*.{ts,tsx,js,jsx}" --max-warnings=0

    - name: Build
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/

  deployment:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: dist/

    - name: Publish artifact for manual deployment
      uses: actions/upload-artifact@v4
      with:
        name: darshan-transport-frontend-dist
        path: dist/

  auto-deploy:
    name: Auto deploy to Windows VPS
    runs-on: [self-hosted, windows, x64, windows-vps]
    needs: deployment
  if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')

    steps:
    - name: Download build artifact (dist)
      uses: actions/download-artifact@v4
      with:
        name: darshan-transport-frontend-dist
        path: ./artifact

    - name: Copy files directly to CPS host directory
      shell: powershell
      run: |
  # Deploy target directory on the VPS
  $cpsPath = 'C:\apps\DarshanTransportWebsite\Frontend'
        # Optional backup path (uncomment if you want backups)
        # $backupPath = 'C:\apps\DarshanTransportWebsite\Frontend\backup'

        if (!(Test-Path $cpsPath)) { New-Item -ItemType Directory -Force -Path $cpsPath | Out-Null }

        # Optionally keep a simple backup of current files
        # if (Test-Path $cpsPath -PathType Container) {
        #   if (!(Test-Path $backupPath)) { New-Item -ItemType Directory -Force -Path $backupPath | Out-Null }
        #   $timestamp = (Get-Date).ToString('yyyyMMdd-HHmmss')
        #   Copy-Item -Path (Join-Path $cpsPath '*') -Destination (Join-Path $backupPath $timestamp) -Recurse -Force -ErrorAction SilentlyContinue
        # }

        # Remove existing files in CPS dir and copy new build
        Get-ChildItem -Path $cpsPath -Force | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue
        Copy-Item -Path 'artifact\*' -Destination $cpsPath -Recurse -Force -ErrorAction SilentlyContinue
        Write-Host "Files copied to $cpsPath"
