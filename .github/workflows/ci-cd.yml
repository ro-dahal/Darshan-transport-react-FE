name: Darshan Transport Frontend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '22.18.0'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps --ignore-scripts

    - name: Lint code (fail on warnings)
      run: npx eslint --config eslint.config.js "src/**/*.{ts,tsx,js,jsx}" --max-warnings=0

    - name: Build
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/

  deployment:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: dist/

    - name: Publish artifact for manual deployment
      uses: actions/upload-artifact@v4
      with:
        name: darshan-transport-frontend-dist
        path: dist/

  auto-deploy:
    name: Auto deploy to Windows VPS
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: [self-hosted, windows, x64, windows-vps]
    needs: deployment

    steps:
      - name: Download build artifact (dist)
        uses: actions/download-artifact@v4
        with:
          name: darshan-transport-frontend-dist
          path: ./artifact

      - name: Copy files into Frontend\dist on CPS host
        shell: powershell
        run: |
          # Deploy target directory on the VPS (place build inside a dist subfolder)
          $frontendPath = 'C:\apps\DarshanTransportWebsite\Frontend'
          $distPath = Join-Path $frontendPath 'dist'

          # Ensure base directory exists
          if (!(Test-Path $frontendPath)) { New-Item -ItemType Directory -Force -Path $frontendPath | Out-Null }

          # Remove existing dist directory to avoid stale files
          if (Test-Path $distPath) { Remove-Item -Path $distPath -Recurse -Force -ErrorAction SilentlyContinue }

          # Create dist directory and copy artifact files into it
          New-Item -ItemType Directory -Force -Path $distPath | Out-Null
          Copy-Item -Path 'artifact\*' -Destination $distPath -Recurse -Force -ErrorAction SilentlyContinue
          Write-Host "Build artifact copied to $distPath"
